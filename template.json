
{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
        "type": "string",
        "defaultValue": "ema-vm",
        "metadata": {
          "description": "Name of the virtual machine."
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Username for the Virtual Machine."
        }
      },
      "adminPassword": {
        "type": "securestring",
        "minLength": 12,
        "metadata": {
          "description": "Password for the Virtual Machine."
        }
      },
      "dnsLabelPrefix": {
        "type": "string",
        "defaultValue": "[toLower(concat(parameters('vmName')))]",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },
      "publicIpName": {
        "type": "string",
        "defaultValue": "myPublicIP",
        "metadata": {
          "description": "Name for the Public IP used to access the Virtual Machine."
        }
      },
      "publicIPAllocationMethod": {
        "type": "string",
        "defaultValue": "Dynamic",
        "allowedValues": [
          "Dynamic",
          "Static"
        ],
        "metadata": {
          "description": "Allocation method for the Public IP used to access the Virtual Machine."
        }
      },
       "sqlDataDisksCount": {
        "type": "int",
        "defaultValue": 1,
        "minValue": 1,
        "maxValue": 8,
        "metadata": {
          "description": "Amount of data disks (1TB each) for SQL Data files"
        }
    },
    "sqlLogDisksCount": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 8,
      "metadata": {
        "description": "Amount of data disks (1TB each) for SQL Log files"
      }
    },
    "storageWorkloadType": {
      "type": "String",
      "defaultValue": "General",
      "metadata": {
        "description": "SQL Server Workload Type"
      }
    },
      "publicIpSku": {
        "type": "string",
        "defaultValue": "Basic",
        "allowedValues": [
          "Basic",
          "Standard"
        ],
        "metadata": {
          "description": "SKU for the Public IP used to access the Virtual Machine."
        }
      },
      "dataPath": {
      "type": "String",
      "defaultValue": "F:\\SQLData",
      "metadata": {
        "description": "Path for SQL Data files. Please choose drive letter from F to Z, and other drives from A to E are reserved for system"
      }
    },
    "logPath": {
      "type": "String",
      "defaultValue": "G:\\SQLLog",
      "metadata": {
        "description": "Path for SQL Log files. Please choose drive letter from F to Z and different than the one used for SQL data. Drive letter from A to E are reserved for system"
      }
    },
      "sqlUsername": {
          "type": "string",
          "metadata": {
              "description": "The username for SQL server."
          }
      },
      "sqlPassword": {
          "type": "securestring",
          "metadata": {
              "description": "The password for SQL server."
          }
      },
      "sqlDBName": {
          "type": "string",
          "defaultValue": "emadb",
          "metadata": {
              "description": "The name of the SQL Database."
          }
      },
      "OSVersion": {
        "type": "string",
        "defaultValue": "2019-Datacenter",
        "allowedValues": [
          "2008-R2-SP1",
          "2012-Datacenter",
          "2012-R2-Datacenter",
          "2016-Nano-Server",
          "2016-Datacenter-with-Containers",
          "2016-Datacenter",
          "2019-Datacenter",
          "2019-Datacenter-Core",
          "2019-Datacenter-Core-smalldisk",
          "2019-Datacenter-Core-with-Containers",
          "2019-Datacenter-Core-with-Containers-smalldisk",
          "2019-Datacenter-smalldisk",
          "2019-Datacenter-with-Containers",
          "2019-Datacenter-with-Containers-smalldisk"
        ],
        "metadata": {
          "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
        }
      },
      "imageOffer": {
      "type": "String",
      "defaultValue": "sql2019-ws2019",
      "allowedValues": [
        "sql2019-ws2019",
        "sql2017-ws2019",
        "SQL2017-WS2016",
        "SQL2016SP1-WS2016",
        "SQL2016SP2-WS2016",
        "SQL2014SP3-WS2012R2",
        "SQL2014SP2-WS2012R2"
      ],
      "metadata": {
        "description": "Windows Server and SQL Offer"
      }
    },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_D2_v3",
        "metadata": {
          "description": "Size of the virtual machine."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "variables": {
      "storageAccountName": "[concat('bootdiags', uniquestring(resourceGroup().id))]",
      "nicName": "myVMNic",
      "publicIpAddressName": "[concat(parameters('vmName'), '-publicip-', uniqueString(parameters('vmName')))]",
      "publicIpAddressType": "Dynamic",
      "publicIpAddressSku": "Basic",
      "diskConfigurationType": "NEW",
      "addressPrefix": "10.0.0.0/16",
      "subnetName": "Subnet",
      "subnetPrefix": "10.0.0.0/24",
      "virtualNetworkName": "MyVNET",
      "dataDisksLuns": "[array(range(0 ,parameters('sqlDataDisksCount')))]",
      "logDisksLuns": "[array(range(parameters('sqlDataDisksCount'), parameters('sqlLogDisksCount')))]",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
      "networkSecurityGroupName": "default-NSG",
      "dataDisks": {
        "createOption": "empty",
        "caching": "ReadOnly",
        "writeAcceleratorEnabled": false,
        "storageAccountType": "Premium_LRS",
        "diskSizeGB": 1023
      },
      "tempDbPath": "D:\\SQLTemp"
    },
    "resources": [
      {
      "name": "[parameters('publicIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-11-01",
      "location": "[resourceGroup().location]",
      "sku": {"name": "[parameters('publicIpSku')]"},
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[toLower(variables('storageAccountName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2019-06-01",
        "name": "Port443IB",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-443",
              "properties": {
                "priority": 443,
                "access": "Allow",
                "direction": "Inbound",
                "destinationPortRange": "443",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2019-06-01",
        "name": "Port80",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-80",
              "properties": {
                "priority": 330,
                "access": "Allow",
                "direction": "Inbound",
                "destinationPortRange": "80",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2019-06-01",
        "name": "Port8080",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-8080",
              "properties": {
                "priority": 340,
                "access": "Allow",
                "direction": "Inbound",
                "destinationPortRange": "8080",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2019-06-01",
        "name": "Port443OB",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-443",
              "properties": {
                "priority": 100,
                "access": "Allow",
                "direction": "Outbound",
                "destinationPortRange": "443",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2019-06-01",
        "name": "Port1010",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-8172",
              "properties": {
                "priority": 1010,
                "access": "Allow",
                "direction": "Outbound",
                "destinationPortRange": "8172",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2019-06-01",
        "name": "Port8000",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-8000",
              "properties": {
                "priority": 110,
                "access": "Allow",
                "direction": "Outbound",
                "destinationPortRange": "8000",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      },
    {
      "name": "[variables('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-3389",
            "properties": {
              "description": "description",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-11-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "tags": {
        "displayName": "[variables('virtualNetworkName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
              "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('nicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-11-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ],
      "tags": {
        "displayName": "[variables('nicName')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('vmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
      ],
      "tags": {
        "displayName": "[parameters('vmName')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
      },
      "storageProfile": {
        "osDisk": {
            "name":"[parameters('vmName')]",
            "caching": "ReadWrite",
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          },
        "imageReference": {
          "publisher": "MicrosoftSQLServer",
          "offer": "[parameters('imageOffer')]",
          "sku": "[parameters('OSVersion')]",
          "version": "latest"
      },
      "copy": [
          {
            "name": "dataDisks",
            "count": "[add(parameters('sqlDataDisksCount'), parameters('sqlLogDisksCount'))]",
            "input": {
              "lun": "[copyIndex('dataDisks')]",
              "createOption": "[variables('dataDisks').createOption]",
              "caching": "[if(greaterOrEquals(copyIndex('dataDisks'), parameters('sqlDataDisksCount')) ,'None', variables('dataDisks').caching )]",
              "writeAcceleratorEnabled": "[variables('dataDisks').writeAcceleratorEnabled]",
              "diskSizeGB": "[variables('dataDisks').diskSizeGB]",
              "managedDisk": {
                "storageAccountType": "[variables('dataDisks').storageAccountType]"
              }
            }
          }
        ]
      },
      "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
           "windowsConfiguration": {
            "enableAutomaticUpdates": true,
            "provisionVmAgent": true
          }
        }
      }
    },
      {
      "type": "Microsoft.SqlVirtualMachine/SqlVirtualMachines",
      "apiVersion": "2017-03-01-preview",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ],
      "properties": {
        "virtualMachineResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]",
        "sqlManagement": "Full",
        "SqlServerLicenseType": "PAYG",
        "StorageConfigurationSettings": {
          "DiskConfigurationType": "[variables('diskConfigurationType')]",
          "StorageWorkloadType": "[parameters('storageWorkloadType')]",
          "SQLDataSettings": {
            "LUNs": "[variables('dataDisksLUNs')]",
            "DefaultFilePath": "[parameters('dataPath')]"
          },
          "SQLLogSettings": {
            "Luns": "[variables('logDisksLUNs')]",
            "DefaultFilePath": "[parameters('logPath')]"
          },
          "SQLTempDbSettings": {
            "DefaultFilePath": "[variables('tempDbPath')]"
          }
        }
      }
    }
    ],
    "outputs": {
      "hostname": {
        "type": "string",
        "value": "[reference(parameters('publicIPName')).dnsSettings.fqdn]"
      }
    }
  }
