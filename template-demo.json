{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name of the virtual machine. Please use a unique name as this will be used as you Intel EMA instance."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the virtual machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin Password for the virtual machine."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Size of the virtual machine."
            }
        },
        "globalUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for Intel EMA Global Administrator account"
            }
        },
        "globalPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Intel EMA Global Administrator account."
            }
        }
    },
    "functions": [],
    "variables": {
        "nicName": "myVMNic",
        "dnsLabelName": "[parameters('vmName')]",
        "publicIpName": "[concat(parameters('vmName'), 'publicIpAddress')]",
        "publicIpAddressSku": "Basic",
        "sqlSku": "express",
        "sqlDataDisksCount": 1,
        "sqllogDisksCount": 1,
        "dataDisks": {
            "createOption": "empty",
            "caching": "ReadOnly",
            "writeAcceleratorEnabled": false,
            "storageAccountType": "StandardSSD_LRS",
            "diskSizeGB": 32
        },
        "imageOffer": "sql2017-ws2019",
        "addressPrefix": "10.0.0.0/16",
        "subnetName": "Subnet",
        "virtualNetworkName": "MyVNET",
        "subnetRef": "[resourceId('Microsoft.Network/VirtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
        "networkSecurityGroupName": "default-NSG",
        "filename": "https://raw.githubusercontent.com/asolano2013/EMATemplate/main/EMAInstall.ps1",
        "scriptName": "EMAInstall.ps1"
    },
    "resources": [
        
        {
            "name": "[variables('nicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[variables('nicName')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('publicIpName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[variables('publicIpAddressSku')]"
            },
            "tags": {
                "displayName": "PublicIpAddress"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsLabelName')]"
                }
            }
        },
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "tags": {
                "displayName": "[variables('virtualNetworkName')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[parameters('vmName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "imageReference":{
                        "publisher": "microsoftsqlserver",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('sqlSku')]",
                        "version": "latest"
                    },
                     "copy": [
                    {
                    "name": "dataDisks",
                    "count": "[add(variables('sqlDataDisksCount'), variables('sqlLogDisksCount'))]",
                    "input": {
                        "lun": "[copyIndex('dataDisks')]",
                        "createOption": "[variables('dataDisks').createOption]",
                        "caching": "[if(greaterOrEquals(copyIndex('dataDisks'), variables('sqlDataDisksCount')) ,'None', variables('dataDisks').caching )]",
                        "writeAcceleratorEnabled": "[variables('dataDisks').writeAcceleratorEnabled]",
                        "diskSizeGB": "[variables('dataDisks').diskSizeGB]",
                        "managedDisk": {
                        "storageAccountType": "[variables('dataDisks').storageAccountType]"
                        }
                    }
                    }
                ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVMAgent": true
                    }
                }
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Port443IB",
                        "properties": {
                            "description": "Port 443 Inbound",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Port443OB",
                        "properties": {
                            "description": "Port 443 Outbound",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "Port80",
                        "properties": {
                            "description": "Port 80",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Port8080",
                        "properties": {
                            "description": "Port 8080",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Port1010",
                        "properties": {
                            "description": "Port 1010",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "1010",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 104,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Port8000",
                        "properties": {
                            "description": "Port 8000",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8000",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Port3389",
                        "properties": {
                            "description": "Allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Port8084",
                        "properties": {
                            "description": "Websocket",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8084",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        // {
        //     "name": "[concat(parameters('vmName'),'/EMAInstallscript')]",
        //     "type": "Microsoft.Compute/virtualMachines/extensions",
        //     "apiVersion": "2019-07-01",
        //     "location": "[resourceGroup().location]",
        //     "tags": {
        //         "displayName": "EMAInstall script for Windows VM"
        //     },
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
        //     ],
        //     "properties": {
        //         "publisher": "Microsoft.Compute",
        //         "type": "CustomScriptExtension",
        //         "typeHandlerVersion": "1.10",
        //         "autoUpgradeMinorVersion": true,
        //         "settings": {
        //             "fileUris": [
        //                 "[variables('filename')]"
        //             ]
        //         },
        //         "protectedSettings": {
        //             "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file ', variables('scriptName'), ' ', reference(variables('publicIpName')).dnsSettings.fqdn, ' ', parameters('vmName'), ' ', parameters('globalUsername'), ' ', parameters('globalPassword'))]"
        //         }
        //     }
        // },
        {
            "name": "[concat(parameters('vmName'),'/dotNetInstall')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "dotNetInstall"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.19",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "https://github.com/asolano2013/EMATemplate/blob/main/dotNET48Install.zip?raw=true",
                    "configurationFunction": "dotNET48Install.ps1\\Net48Install"
                },
                "protectedSettings": {
                    "Items": {
                        "vmName": "[parameters('vmName')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "globalUsername": "[parameters('globalUsername')]",
                        "globalPassword": "[parameters('globalPassword')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "hostname": {
            "type": "string",
            "value": "[reference(variables('publicIpName')).dnsSettings.fqdn]"
        }
    }
}
